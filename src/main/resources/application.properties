spring.application.name=WebToonEpics
# my-sql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
spring.datasource.username=${my-sql.username}
spring.datasource.password=${my-sql.password}
# jpa
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.properties.hibernate.format_sql=true
# google security
spring.security.oauth2.client.registration.google.client-id=${google.client-id}
spring.security.oauth2.client.registration.google.client-secret=${google.client-secret}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email, profile
spring.security.oauth2.client.registration.google.client-name=Google
# kakao security
spring.security.oauth2.client.registration.kakao.client-id=${kakao.client-id}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image, account_email
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-info-authentication-method=POST
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# spring-security
logging.level.org.springframework.security=debug
# Hibernate ddl
spring.jpa.generate-ddl=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# password key save
spring.jwt.secret=${jwt.secret}
# security import
spring.profiles.include=SECRET-KEY
# redis
spring.data.redis.host=${redis.host}
spring.data.redis.port=6379
# Swagger
## swagger-ui \uC811\uADFC \uACBD\uB85C. default \uAC12\uC740 /swagger-ui.html
springdoc.swagger-ui.path=/api-test
### path, query, body, response \uC21C\uC73C\uB85C \uCD9C\uB825
springdoc.swagger-ui.groups-order=DESC
### alpha: \uC54C\uD30C\uBCB3 \uC21C \uC815\uB82C
springdoc.swagger-ui.tags-sorter=alpha
### method : delete - get - patch - post - put \uC21C\uC73C\uB85C \uC815\uB82C / alpha : \uC54C\uD30C\uBCB3 \uC21C\uC73C\uB85C \uC815\uB82C
springdoc.swagger-ui.operations-sorter=method
## swagger-ui default url\uC778 petstore html\uC758 \uBE44\uD65C\uC131\uD654 \uC124\uC815
springdoc.swagger-ui.disable-swagger-default-url=true
## swagger-ui\uC5D0\uC11C try \uD588\uC744 \uB54C request duration\uC744 \uC54C\uB824\uC8FC\uB294 \uC124\uC815
springdoc.swagger-ui.display-request-duration=true
## openAPI \uC811\uADFC \uACBD\uB85C. default \uAC12\uC740 /v3/api-docs \uC774\uB2E4.
springdoc.api-docs.path=/api-docs
## Spring Actuator\uC758 endpoint\uAE4C\uC9C0 \uBCF4\uC5EC\uC904 \uAC83\uC778\uC9C0?
springdoc.show-actuator=true
## request media type \uC758 \uAE30\uBCF8 \uAC12
springdoc.default-consumes-media-type=application/json
## response media type \uC758 \uAE30\uBCF8 \uAC12
springdoc.default-produces-media-type=application/json
## \uD574\uB2F9 \uD328\uD134\uC5D0 \uB9E4\uCE6D\uB418\uB294 controller\uB9CC swagger-ui\uC5D0 \uB178\uCD9C\uD55C\uB2E4.
springdoc.paths-to-match=/api/**
